name: 'coco_semantic_segmentation_deeplabv3_resnet101_cos'
task: 'semantic_segmentation'
input_dim: (3, 513, 513) # Input dim follows https://github.com/chenxi116/DeepLabv3.pytorch
num_classes: 81 # (80 annotated class + 1 background)
save_model: True

SYSTEM:
  num_workers: 16

BACKBONE:
  network: 'deeplabv3_resnet101'
  pooling: False
  use_pretrained: True
  pretrained_path: "/data/pretrained_model/resnet101-5d3b4d8f.pth"

CLASSIFIER:
  classifier: "seg_cos"

LOSS:
  loss: 'semantic_nllloss'

DATASET:
  dataset: 'coco2017'
  cache_all_data: True
  TRANSFORM:
    TRAIN:
      transforms: ('normalize', )
      joint_transforms: ('joint_random_scale_crop', 'joint_random_horizontal_flip')
      TRANSFORMS_DETAILS:
        NORMALIZE:
          mean: (0.485, 0.456, 0.406)
          sd: (0.229, 0.224, 0.225)
        crop_size: (512, 512)
    TEST:
      transforms: ('normalize', )
      TRANSFORMS_DETAILS:
        NORMALIZE:
          mean: (0.485, 0.456, 0.406)
          sd: (0.229, 0.224, 0.225)
        crop_size: (512, 512)

TRAIN:
  max_epochs: 20
  batch_size: 32
  initial_lr: 0.007
  lr_scheduler: "polynomial"
  log_interval: 200
  OPTIMIZER:
    type: "SGD"
    momentum: 0.9
    weight_decay: 1e-4


TEST:
  batch_size: 1
